##########################################################
#              Shawn's i3-Gaps Config File               #
#                        07/24/18                        #
##########################################################

# export FILE="ranger"
# export TERMINAL="st"

# Basic Definitions
hide_edge_borders both
for_window [class="^.*"] border pixel 2
gaps inner 35
gaps outer 0
set $mod Mod4
set $term urxvt

# Compton
#exec_always --no-startup-id compton

# Wallpaper
exec_always --no-startup-id wal -a "90" -i ~/Pictures/Wallpapers/wal.jpg 
# exec_always --no-startup-id feh --bg-scale ~/Pictures/memewall.jpg

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:SourceCodePro Mono 8

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Unclutter
exec --no-startup-id unclutter

# Start a terminal
bindsym $mod+Return exec st

# Kill focused window
bindsym $mod+Shift+c kill

# Program keybindings #

# Launch rofi (in run mode)
bindsym $mod+d exec rofi -show run

# Launch calcurse
bindsym $mod+c exec st -e calcurse

# Volume Control
bindsym $mod+F6 exec pamixer -t
bindsym $mod+F7 exec pamixer -d 5
bindsym $mod+F8 exec pamixer -i 5

# Brightness
#bindsym $mod+F2 exec ~/Scripts/screenbrightdown.sh
#bindsym $mod+F3 exec ~/Scripts/screenbrightup.sh

# Program Keybindings

# Launch Ranger File Manager
bindsym $mod+Mod1+r exec st -e ranger

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# Dropdown Terminal Scratchpad

bindsym $mod+u	[instance="dropdown"] scratchpad show; [instance="dropdown"] move position center

for_window [instance="dropdown"] floating enable
for_window [instance="dropdown"] resize set 625 400
for_window [instance="dropdown"] move scratchpad
for_window [instance="dropdown"] border pixel 2
exec --no-startup-id $term -name dropdown

# Python Shell Scratchpad
bindsym $mod+Shift+a	[instance="math"] scratchpad show; [instance="math"] move position center

for_window [instance="math"] floating enable
for_window [instance="math"] resize set 800 300
for_window [instance="math"] move scratchpad
for_window [instance="math"] border pixel 2
exec --no-startup-id $term -name math -e python3 -q

# Crypto Portfolio Scratchpad

bindsym $mod+m [instance="crypto"] scratchpad show; [instance="crypto"] move position center

for_window [instance="crypto"] floating enable
for_window [instance="crypto"] resize set 950 500 
for_window [instance="crypto"] move scratchpad
for_window [instance="crypto"] border pixel 2
exec --no-startup-id $term -name crypto -e ~/Scripts/cryptoportfolio.sh

# changefocus with arrow keys
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# move focused window with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# reload the configuration file
bindsym $mod+Shift+q reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}
